<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.member.mapper.MemberMapper">

	<insert id="addMember" >
		insert into memberSec(id, pw, name, email, gender, age) 
		values(#{id}, #{pw}, #{name}, #{email}, #{gender}, #{age}) 
	</insert>
	<insert id="addAuth">
		insert into memberSec_auth values(#{id}, #{auth})
	</insert>

	<!-- MemberVO안에 List<AuthVO> authList때문에 resultMap 정의함  -->
	<resultMap type="com.member.domain.MemberVO" id="memberMap">
		<id property="id" column="id" />
		<result property="id" column="id"/>
		<result property="pw" column="pw"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="gender" column="gender"/>
		<result property="age" column="age"/>
		<result property="reg" column="reg"/>
		<result property="updateDate" column="updatedate"/>
		<result property="enabled" column="enabled"/>
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap>
	
	<resultMap type="com.member.domain.AuthVO" id="authMap">
		<result property="id" column="id" />
		<result property="auth" column="auth" />
	</resultMap>
	
	<select id="getMember" resultMap="memberMap">
		select mem.id, pw, name, email, gender, age, reg, updatedate, auth 
		from memberSec mem left outer join memberSec_auth auth on mem.id = auth.id 
		where mem.id = #{id} 
	</select>
	

	<update id="updateMember">
		update memberSec set age=#{age}, email=#{email} 
		where id=#{id}	
	</update>

	<delete id="deleteMember">
		delete from memberSec where id=#{id}
	</delete>

	<delete id="deleteAuth">
		delete from memberSec_auth where id=#{id}
	</delete>







</mapper>