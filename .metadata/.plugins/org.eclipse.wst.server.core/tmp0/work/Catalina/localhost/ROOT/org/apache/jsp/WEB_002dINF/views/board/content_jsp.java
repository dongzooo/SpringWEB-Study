/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.59
 * Generated at: 2022-04-04 08:51:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class content_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/git/spring/SpringFrameWork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/member/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1648122726000L));
    _jspx_dependants.put("jar:file:/D:/git/spring/SpringFrameWork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/member/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>content</title>\r\n");
      out.write("	<link href=\"/resources/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<br />\r\n");
      out.write("	<h1 align=\"center\"> Content </h1>\r\n");
      out.write("	<table width=\"300\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>글번호</td>\r\n");
      out.write("			<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>제목</td>\r\n");
      out.write("			<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>작성자</td>\r\n");
      out.write("			<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>내용</td>\r\n");
      out.write("			<td><textarea rows=\"10\" cols=\"30\" disabled>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>작성일</td>\r\n");
      out.write("			<td>");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>수정일</td>\r\n");
      out.write("			<td>");
      if (_jspx_meth_fmt_005fformatDate_005f1(_jspx_page_context))
        return;
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"2\">\r\n");
      out.write("				<button class=\"btn\" data-oper=\"modify\" >수정</button>\r\n");
      out.write("				<button class=\"btn\" data-oper=\"delete\">삭제</button>\r\n");
      out.write("				<button class=\"btn\" data-oper=\"list\">리스트</button>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<form action=\"/board/modify\" method=\"get\" >\r\n");
      out.write("		<input type=\"hidden\" name=\"bno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("		<input type=\"hidden\" name=\"pageNum\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("		<input type=\"hidden\" name=\"listQty\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.listQty}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("		<input type=\"hidden\" name=\"type\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("		<input type=\"hidden\" name=\"keyword\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("	</form>\r\n");
      out.write("	<br />\r\n");
      out.write("	<style>\r\n");
      out.write("		.inner {\r\n");
      out.write("			margin: 0 auto; \r\n");
      out.write("			width: 70%;\r\n");
      out.write("		}\r\n");
      out.write("		.reply_container {\r\n");
      out.write("			margin: 0.5rem auto;\r\n");
      out.write("			padding: 1rem 1.5rem;\r\n");
      out.write("			display: flex;\r\n");
      out.write("			width: 80%;\r\n");
      out.write("			flex-direction: column; \r\n");
      out.write("			background-color: #AAB9BD;\r\n");
      out.write("		}\r\n");
      out.write("		.reply_title {\r\n");
      out.write("			font-size: 1rem;\r\n");
      out.write("			font-weight: bold;\r\n");
      out.write("			margin: 0.5rem 0;\r\n");
      out.write("		}\r\n");
      out.write("		.reply_box {\r\n");
      out.write("			margin: 0.5rem 0; \r\n");
      out.write("			width: 100%; \r\n");
      out.write("		}\r\n");
      out.write("		textarea {\r\n");
      out.write("			width: 90%;		\r\n");
      out.write("		}\r\n");
      out.write("		.reply_list_container {\r\n");
      out.write("			margin: 0.5rem auto;\r\n");
      out.write("			padding: 1rem 1.5rem;\r\n");
      out.write("			display: flex;\r\n");
      out.write("			width: 80%;\r\n");
      out.write("			flex-direction: column; \r\n");
      out.write("			background-color: #AAB9BD;\r\n");
      out.write("		}\r\n");
      out.write("		.reply_li {\r\n");
      out.write("			margin: 0.5rem 0; \r\n");
      out.write("			display: flex; \r\n");
      out.write("			flex-direction: row; \r\n");
      out.write("			width: 100%; \r\n");
      out.write("		}\r\n");
      out.write("		.reply_content {\r\n");
      out.write("			width: 100%; \r\n");
      out.write("		}\r\n");
      out.write("		.replyer {\r\n");
      out.write("			font-weigth: bold;\r\n");
      out.write("			font-size: 0.8rem;\r\n");
      out.write("			width: 100%;\r\n");
      out.write("		}\r\n");
      out.write("		.reply {\r\n");
      out.write("			font-size: 0.8rem;\r\n");
      out.write("			width: 100%; \r\n");
      out.write("		}\r\n");
      out.write("		.regdate {\r\n");
      out.write("			font-size: 0.6rem;\r\n");
      out.write("			width: 100%; \r\n");
      out.write("		}\r\n");
      out.write("		.reply_btns {\r\n");
      out.write("			margin: 0.3rem 0;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("	<div class=\"inner\">\r\n");
      out.write("		<div class=\"reply_container\">\r\n");
      out.write("			<div class=\"reply_title\"> 댓글 </div>\r\n");
      out.write("			<div class=\"reply_box\">\r\n");
      out.write("				<textarea rows=\"3\"></textarea>\r\n");
      out.write("				<input type=\"text\" placeholder=\"작성자\"/>\r\n");
      out.write("				<button class=\"newReplyBtn\">댓글 저장</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"reply_list_container\">\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<br /><br />\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\" src=\"/resources/js/reply.js\" ></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		\r\n");
      out.write("		let bnoVal = '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("		let list_container = $(\".reply_list_container\");\r\n");
      out.write("		showList(1);\r\n");
      out.write("		\r\n");
      out.write("		//전체 댓글 목록 가져와 뿌리기(댓글 페이지번호 주면서) \r\n");
      out.write("		function showList(page){\r\n");
      out.write("			// 전체 댓글 가져오는 js 함수 호출 \r\n");
      out.write("			replyService.getList({bno:bnoVal, page:page||1}, function(data){ // data = 서버에서 전달해준 댓글 리스트 \r\n");
      out.write("				// 서버에서 댓글을 보내줬는지 확인 (댓글이 없는 본문은 안가져옴)\r\n");
      out.write("				if(data == null || data.length == 0){\r\n");
      out.write("					list_container.html(\"<div class='reply_li'>댓글이 없습니다</div>\");\r\n");
      out.write("					return; // 아래는 실행할 필요없으니 강제 종료 \r\n");
      out.write("				}\r\n");
      out.write("				console.log(data);\r\n");
      out.write("				let str = \"\"; // 화면에 띄울 댓글 tr묶음 html을 만들어서 저장해놓을 변수 \r\n");
      out.write("				let len = data.length || 0; \r\n");
      out.write("\r\n");
      out.write("				// 댓글 목록 받아온 것 화면 띄우기위해 html 형태의 문자열로 구성 \r\n");
      out.write("				for(let i = 0; i < len; i++){\r\n");
      out.write("					let wid = data[i].lev * 2; \r\n");
      out.write("					console.log(\"wid : \" + wid);\r\n");
      out.write("					str += \"<div class='reply_li' data-rno='\"+data[i].rno+\"' data-grp='\"+data[i].grp+\"' data-step='\"+data[i].step+\"' data-lev='\"+data[i].lev+\"' >\";\r\n");
      out.write("					str += \"<div class='reply_level' style='width:\"+wid+\"rem'></div>\";\r\n");
      out.write("					str += \"<div class='reply_content'>\";\r\n");
      out.write("					// 리스트 분석용 데이터 출력 (나중에 지우기)\r\n");
      out.write("					str += \"<div> rno: \"+data[i].rno+\", grp: \"+data[i].grp+\", step: \"+data[i].step+\", lev: \"+data[i].lev+\" </div>\";\r\n");
      out.write("					\r\n");
      out.write("					str += \"<div class='replyer'>\"+data[i].replyer+\"</div>\";\r\n");
      out.write("					str += \"<div class='reply'>\"+data[i].reply+\"</div>\";\r\n");
      out.write("					str += \"<div class='replyDate'>\"+replyService.displayTimeFormat(data[i].replyDate)+\"</div>\";\r\n");
      out.write("					str += \"<div class='reply_btns'><button class='addRepBtn'>답글</button>\";\r\n");
      out.write("					str += \"<button class='modifRepBtn'>수정</button></div></div></div>\";\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				list_container.html(str); // list_container div 태그 안을 댓글목록만들어놓은 str로 변경 \r\n");
      out.write("				\r\n");
      out.write("			});// replyService.getList\r\n");
      out.write("		}// showList\r\n");
      out.write("		\r\n");
      out.write("		// 새 댓글 등록\r\n");
      out.write("		$(\".newReplyBtn\").click(function(e){\r\n");
      out.write("			// 새 댓글 추가 처리 \r\n");
      out.write("			console.log(\"새 댓글 추가 버튼 클릭!!!!\");\r\n");
      out.write("			let replyerTxt = $(this).prev().val(); 	// 작성자 input value\r\n");
      out.write("			let replyTxt = $(this).prev().prev().val(); // 댓글 textarea value\r\n");
      out.write("			// 댓글 추가 메서드 실행 \r\n");
      out.write("			replyService.add(\r\n");
      out.write("					{reply : replyTxt, replyer : replyerTxt, bno : bnoVal},\r\n");
      out.write("					function(result){\r\n");
      out.write("						alert(\"result : \" + result);\r\n");
      out.write("						showList(1); // 댓글 추가후 화면에 댓글목록 새로 가져와 뿌리기 \r\n");
      out.write("					}\r\n");
      out.write("			);\r\n");
      out.write("		});\r\n");
      out.write("		// 댓글의 답글 추가 버튼 이벤트 처리 -> 답글 입력창 보여주기 \r\n");
      out.write("		$(\".reply_list_container\").on(\"click\", \"button.addRepBtn\", function(e){\r\n");
      out.write("			console.log(\"답글 버튼 클릭!!!\");\r\n");
      out.write("			let reply_li_tag = $(this).parent().parent().parent(); \r\n");
      out.write("			let rno = reply_li_tag.data(\"rno\");\r\n");
      out.write("			let grp = reply_li_tag.data(\"grp\");\r\n");
      out.write("			let step = reply_li_tag.data(\"step\");\r\n");
      out.write("			let lev = reply_li_tag.data(\"lev\");\r\n");
      out.write("			let wid = lev*2;\r\n");
      out.write("			// 답글 입력할수있는 textarea, input, button 문자열로 구성 \r\n");
      out.write("			let str = \"<div class='reply_li' data-rno='\"+rno+\"' data-grp='\"+grp+\"' data-step='\"+step+\"' data-lev='\"+lev+\"'>\";\r\n");
      out.write("			str += \"<div class='reply_level' style='width:\"+wid+\"rem'></div>\";\r\n");
      out.write("			str += \"<div class='reply_content'>\";\r\n");
      out.write("			str += \"<textarea></textarea><input type='text' placeholder='작성자' />\";\r\n");
      out.write("			str += \"<button class='addRepSubmit'>답글저장</button></div></div>\";\r\n");
      out.write("			reply_li_tag.after(str);\r\n");
      out.write("		}); \r\n");
      out.write("		// 답글 추가 처리 \r\n");
      out.write("		$(\".reply_list_container\").on(\"click\", \"button.addRepSubmit\", function(e){\r\n");
      out.write("			console.log(\"답글 저장 버튼 클릭클릭!!\");\r\n");
      out.write("			let reply_li = $(this).parent().parent();\r\n");
      out.write("			let rnoVal = reply_li.data(\"rno\"); \r\n");
      out.write("			console.log(\"rnoVal : \" + rnoVal);\r\n");
      out.write("			let stepVal = reply_li.data(\"step\"); \r\n");
      out.write("			console.log(\"stepVal : \" + stepVal);\r\n");
      out.write("			let levVal = reply_li.data(\"lev\");\r\n");
      out.write("			console.log(\"levVal : \" + levVal);\r\n");
      out.write("			let grpVal = reply_li.data(\"grp\");\r\n");
      out.write("			console.log(\"grpVal : \" + grpVal);\r\n");
      out.write("			let replyTxt = $(this).prev().prev().val(); \r\n");
      out.write("			let replyerTxt = $(this).prev().val(); \r\n");
      out.write("			\r\n");
      out.write("			// 댓글 추가 메서드 실행 \r\n");
      out.write("			replyService.add(\r\n");
      out.write("					{reply : replyTxt, replyer : replyerTxt, bno : bnoVal, rno : rnoVal, grp: grpVal, step: stepVal, lev: levVal},\r\n");
      out.write("					function(result){\r\n");
      out.write("						alert(\"result : \" + result);\r\n");
      out.write("						showList(1); // 댓글 추가후 화면에 댓글목록 새로 가져와 뿌리기 \r\n");
      out.write("					}\r\n");
      out.write("			);\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		let li_content_clone = {}; \r\n");
      out.write("		let reply_content = {}; \r\n");
      out.write("		// 댓글 수정 버튼 이벤트 처리 -> 수정가능한 textarea 로 변경 \r\n");
      out.write("		$(\".reply_list_container\").on(\"click\", \"button.modifRepBtn\", function(e){\r\n");
      out.write("			console.log(\"댓글 수정 버튼 클릭!!!\");\r\n");
      out.write("			\r\n");
      out.write("			// 변경되야하는 reply_content 부분만 담기 \r\n");
      out.write("			reply_content = $(this).parent().parent();\r\n");
      out.write("			li_content_clone = reply_content.clone();  // 나중에 수정취소 누르면 되돌리기위해 복제해두기\r\n");
      out.write("			\r\n");
      out.write("			// 기존에 작성된 값들 꺼내기 \r\n");
      out.write("			let replyer = reply_content.find(\"div[class='replyer']\").html();\r\n");
      out.write("			let reply = reply_content.find(\"div[class='reply']\").html();\r\n");
      out.write("			let replyDate = reply_content.find(\"div[class='replyDate']\").html();\r\n");
      out.write("			/*\r\n");
      out.write("			<div class=\"reply_content\">\r\n");
      out.write("				<div class='replyer'><input type='text' value='\"+replyer+\"' disabled /></div>\r\n");
      out.write("				<div class='reply'><textarea>\"+reply+\"</textarea></div>\r\n");
      out.write("				<div class='replyDate'><input type='text' value='\"+replyDate+\"' disabled /></div>\r\n");
      out.write("				<div class='reply_btns'>\r\n");
      out.write("					<button class='modifRepSubmit'>수정확인</button>\r\n");
      out.write("					<button class='modifCancel'>취소</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			*/\r\n");
      out.write("			let str = \"<div class='replyer'><input type='text' value='\"+replyer+\"' disabled /></div>\";\r\n");
      out.write("			str += \"<div class='reply'><textarea rows='3' class='modifTxt'>\"+reply+\"</textarea></div>\";\r\n");
      out.write("			str += \"<div class='replyDate'><input type='text' value='\"+replyDate+\"' disabled /></div>\";\r\n");
      out.write("			str += \"<div class='reply_btns'><button class='modifRepSubmit'>수정확인</button>\";\r\n");
      out.write("			str += \"<button class='deleteRep'>삭제</button>\";\r\n");
      out.write("			str += \"<button class='modifCancel'>취소</button></div>\";\r\n");
      out.write("			reply_content.html(str);\r\n");
      out.write("			\r\n");
      out.write("		}); \r\n");
      out.write("		// 수정 처리 이벤트 \r\n");
      out.write("		$(\".reply_list_container\").on(\"click\", \"button.modifRepSubmit\", function(e){\r\n");
      out.write("			console.log(\"수정 확인 버튼 클릭!!!\");\r\n");
      out.write("			let rnoVal = $(this).parent().parent().parent().data(\"rno\");\r\n");
      out.write("			let modifTxt = $(this).parent().parent().find(\"textarea[class='modifTxt']\").val();\r\n");
      out.write("			console.log(\"rno : \" + rnoVal);\r\n");
      out.write("			console.log(\"modifTxt : \" + modifTxt);\r\n");
      out.write("			\r\n");
      out.write("			// rno, reply\r\n");
      out.write("			replyService.update({\r\n");
      out.write("				rno : rnoVal, \r\n");
      out.write("				reply : modifTxt\r\n");
      out.write("			}, function(result){\r\n");
      out.write("				alert(\"수정 완료!!!\");\r\n");
      out.write("				showList(1);\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		// 수정 취소 이벤트 \r\n");
      out.write("		$(\".reply_list_container\").on(\"click\", \"button.modifCancel\", function(e){\r\n");
      out.write("			console.log(\"수정 취소 버튼 클릭!\");\r\n");
      out.write("			reply_content.html(li_content_clone.children());\r\n");
      out.write("		});\r\n");
      out.write("		// 댓글 삭제 이벤트 \r\n");
      out.write("		$(\".reply_list_container\").on(\"click\", \"button.deleteRep\", function(e){\r\n");
      out.write("			console.log(\"삭제 버튼 클릭!\");\r\n");
      out.write("			let rnoVal = $(this).parent().parent().parent().data(\"rno\");\r\n");
      out.write("			\r\n");
      out.write("			// 댓글 삭제 \r\n");
      out.write("			replyService.remove(rnoVal, \r\n");
      out.write("				function(result){\r\n");
      out.write("					console.log(result); \r\n");
      out.write("					if(result === \"success\"){\r\n");
      out.write("						alert(\"삭제 완료!!!\"); \r\n");
      out.write("						showList(1); \r\n");
      out.write("					}\r\n");
      out.write("				},function(e){\r\n");
      out.write("					alert(e);	\r\n");
      out.write("			}); \r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		/*\r\n");
      out.write("			댓글 삭제하면 답글도 같이 삭제?? \r\n");
      out.write("			유효성 검사 추가 \r\n");
      out.write("			+ 회원가입 합쳐야 \r\n");
      out.write("			- 작성자 입력 x, id 로 변경 \r\n");
      out.write("			- 모든페이지 : 로그인/로그아웃 \r\n");
      out.write("			- 회원 -> 게시판 게시판 -> 회원 \r\n");
      out.write("			- 게시글과 댓글은 로그인한사람만 작성가능\r\n");
      out.write("			- 비로그인으로 어떤페이지만 볼수있는지 \r\n");
      out.write("		*/\r\n");
      out.write("	}); \r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		// 숨김 폼태그 가져오기 \r\n");
      out.write("		let formObj = $(\"form\"); \r\n");
      out.write("		$(\"button.btn\").click(function(e){\r\n");
      out.write("			e.preventDefault(); \r\n");
      out.write("			let operation = $(this).data(\"oper\");\r\n");
      out.write("			\r\n");
      out.write("			if(operation === 'delete'){\r\n");
      out.write("				formObj.attr(\"action\", \"/board/delete\"); \r\n");
      out.write("			}else if(operation === 'list'){\r\n");
      out.write("				formObj.attr(\"action\", \"/board/list\"); \r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			formObj.submit(); // 이동 \r\n");
      out.write("			\r\n");
      out.write("		}); \r\n");
      out.write("	}); \r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /WEB-INF/views/board/content.jsp(35,7) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.regdate}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/content.jsp(35,7) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd HH:mm:SS");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f1_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f1.setParent(null);
      // /WEB-INF/views/board/content.jsp(39,7) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f1.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.updateDate}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/content.jsp(39,7) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f1.setPattern("yyyy-MM-dd HH:mm:SS");
      int _jspx_eval_fmt_005fformatDate_005f1 = _jspx_th_fmt_005fformatDate_005f1.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f1);
      _jspx_th_fmt_005fformatDate_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /WEB-INF/views/board/content.jsp(135,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }
}
