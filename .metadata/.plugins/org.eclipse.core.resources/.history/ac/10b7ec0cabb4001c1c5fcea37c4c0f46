package com.board.controller;

import java.io.File;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

@Controller
@RequestMapping("/upload/")
public class UploadController {
	
	@GetMapping("uploadForm")
	public void uploadForm() {
		System.out.println("업로드 폼 요청");
	}
	
	@PostMapping("uploadPro")
	public String uploadPro(String msg, MultipartHttpServletRequest request ) {
		
		// 넘어온 파일 정보를 꺼내기 
		// 서버에 파일 저장
		System.out.println("msg : "+msg);
		MultipartFile mf = request.getFile("img");
		System.out.println("mf size : " + mf.getSize());
		System.out.println("mf orgName : "+ mf.getOriginalFilename());
		System.out.println("mf ContentType : "+ mf.getContentType());
		
		// 서버에 파일 저장
		// #2 파일 저장할 폴더 경로 찾아 save
		String savePath = request.getRealPath("save");
		System.out.println(savePath);
		// #3 파일이름 (원본파일 이름을 저장할 것인가 no, 파일이름 중복처리해서 서버에 저장)
		// #3-1 오리지날 파일명 + 현재시간 millis + 확장자명
		String orgName = mf.getOriginalFilename();
		String ext  = orgName.substring(orgName.lastIndexOf("."));
		String imgName = orgName.substring(0, orgName.lastIndexOf("."));
		System.out.println("ext : " + ext);
		System.out.println("imgname : "+imgName);
		String newName = imgName + System.currentTimeMillis() + ext;
		System.out.println("new Name = " + newName);
		
		
		// #4 파일을 실제로 저장 처리 : 내가만든 파일명과 폴더 전체 경로를 연결해서 그쪽으로 복사해주는 개념
		
		String imgPath = savePath + "\\" + newName;
		File f = new File(imgPath);
		try {
			mf.transferTo(f);
		} catch (Exception e) {
			e.printStackTrace();
		}
		// (#5. ) DB에 파일 이름 저장 : newName
		
		
		
		// view에 파일명 전달해서 pro페이지에 img로 띄우기 (사용자가 브라우저에서 내가업로드한 서버에 저장)
		
		return "upload/uploadPro";
	}
}
